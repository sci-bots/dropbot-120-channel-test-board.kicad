name: Kicad project

on:
  push:
    branches:
      - '**'
    tags:
      - 'v**'

jobs:
  build:
    name: Generate KiCad outputs
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: "120-channel-test-board"
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        sudo apt install -y zip unzip
        python -m pip install --upgrade pip
        python -m pip install git+https://github.com/ryanfobel/KiField.git@add-quantity
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - uses: INTI-CMNB/KiBot@v1
      with:
        # Required - kibot config file
        config: .kicad_helpers_config/config.kibot.yaml
        # optional - schematic file
        schema: '${{ env.PROJECT_NAME }}.sch'
        # optional - PCB design file
        board: '${{ env.PROJECT_NAME }}.kicad_pcb'
    - name: Generate BOM
      run: |
        sudo chown -R runner:docker manufacturing
        ls -l
        mkdir -p manufacturing/default/assembly_photos
        mkdir -p manufacturing/PCBWay/assembly_photos
        python -m kifield --group -aq -x "${{ env.PROJECT_NAME }}.sch" -i "manufacturing/default/${{ env.PROJECT_NAME }}-BOM.csv"
        ls -l
        ls -l manufacturing/default
        ls -l manufacturing/PCBWay
    - name: Copy assembly photos to manufacturing
      run: |
        cp docs/png/Front.png manufacturing/default/assembly_photos/Front.png
        cp docs/png/Back.png manufacturing/default/assembly_photos/Back.png
        cp -r manufacturing/default/assembly_photos/*.png manufacturing/PCBWay/assembly_photos/
    - name: Upload BOM artifact
      uses: actions/upload-artifact@v2
      with:
        name: BOM
        path: manufacturing/default/${{ env.PROJECT_NAME }}-BOM.csv
    - name: Upload default manufacturing files
      uses: actions/upload-artifact@v2
      with:
        name: default manufacturing files
        path: manufacturing/default
    - name: Upload PCBWay manufacturing files
      uses: actions/upload-artifact@v2
      with:
        name: PCBWay manufacturing files
        path: manufacturing/PCBWay
    - name: Upload docs
      uses: actions/upload-artifact@v2
      with:
        name: docs
        path: docs
    - name: Get the version
      if: startsWith(github.ref, 'refs/tags/v')
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
    - name: Zip artifacts for release
      if: startsWith(github.ref, 'refs/tags/v')
      env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
      run: |
        zip -r ${{ env.PROJECT_NAME }}-manufacturing-files-default-${VERSION}.zip docs manufacturing/default
        zip -r ${{ env.PROJECT_NAME }}-manufacturing-files-PCBWay-${VERSION}.zip docs manufacturing/PCBWay
        mv manufacturing/default/${{ env.PROJECT_NAME }}-BOM.csv ${{ env.PROJECT_NAME }}-BOM-${VERSION}.csv
        zip -rj ${{ env.PROJECT_NAME }}-gerbers-${VERSION}.zip manufacturing/default
    - name: Create release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: ncipollo/release-action@v1
      with:
        artifacts: "*.zip,*-BOM-*.csv"
        #bodyFile: "body.md"
        token: ${{ secrets.GITHUB_TOKEN }}
